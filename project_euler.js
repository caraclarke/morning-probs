// #1
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
//Find the sum of all the multiples of 3 or 5 below 1000.

var arr = [];

for (var i = 1; i < 1000; i++) {
  if ((i % 3 === 0) || (i % 5 === 0)) {
    arr.push(i);
  }
}

var myTotal = arr.reduce(function(a, b) { return a + b; }, 0);

console.log(arr);
console.log(myTotal);

// #2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

var fib = [1, 2];
var limit = 4000000;
var sum = 0;

for (var i=0; i < limit; i++) {
    var test = fib[i] + fib[i + 1];
    fib.push(test);
    var number = fib[i];;
    if (number < limit && number % 2 == 0) {
      var result = sum += number;
    }
}

console.log(result);

// #3
// The prime factors of 13195 are 5, 7, 13 and 29.
// What is the largest prime factor of the number 600851475143 ?

function factorsNumber(remainder) {
   var factors = [];
   var greatest;

  for (var i = 2; i <= remainder; i++) {
      while ((remainder % i) === 0) {
          factors.push(i);
          remainder /= i;
      }
  }

  for (var j=0; j < factors.length; j++) {
    for (var k=0; k < factors.length; k++) {
      greatest = factors[j];
      if (factors[k] > factors[j]) {
        greatest = factors[k];
      }
    }
}
   console.log(factors);
   console.log(greatest);

}

// #4
// A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
// Find the largest palindrome made from the product of two 3-digit numbers.